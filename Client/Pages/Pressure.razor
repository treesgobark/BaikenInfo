@page "/Pressure"
@using Client.Shared

<PageTitle>@Constants.TitlePrefix Pressure</PageTitle>

<MudContainer>
    <MudText>
        Glossary definition: <GlossaryLink Term="Pressure"/>.
    </MudText>
    <br/>
    <MudText>
        The first rule of offense is that you must first earn the privilege of getting in close to your opponent. You can't
        just run at them and expect to be able to land your best offensive starter: <BaikenMove Move="Moves.cS"/>. Most of
        the time your opponent isn't going to let you do that for free. If you want to get in close, you need to get a
        knockdown on your opponent. To learn to do this check out the <MudLink Href="Neutral">Neutral</MudLink> page.
    </MudText>
    <br/>
    <MudText>
        In a nutshell, pressure is the method by which you turn your opponent's disadvantage state (and by extension your
        advantage stage) into health loss and eventually round loss. Advantage and disadvantage will typically change
        between each player many times in one round, but what does it actually mean to be disadvantaged? The simplest way to
        define advantage is that the advantaged player gets to act before the disadvantaged player does. You will gain
        familiarity with this concept over the course of this section.
    </MudText>
    <br/>
    <MudText>
        Let's walk through an example of a typical <GlossaryLink Term="Block String"/> step-by-step. Suppose
        you have just knocked your opponent down with
        <BaikenMove Move="Moves.HkabH" Naming="NamePreference.Friendly"/>. You're in advantage because you have the ability
        to act and make decisions while your opponent is stuck on the ground, unable to act. We typically use this time to
        set up a <BaikenMove Move="Moves.AerialTatami" Naming="NamePreference.Friendly"/> safejump. More information about
        that in the <MudLink Href="Safejumps">Safejumps</MudLink> section.
    </MudText>
    <br/>
    <MudText>
        Now that you've set up your knockdown and your safejump, your opponent has a choice as they're waking up:
        <MudList T="string" ReadOnly>
            <MudListItem>
                - Do an invincible reversal (if you've performed your safejump correctly, you would block it and they would
                eat a guaranteed punish since invincible reversals are always punishable on block, though there are some
                that will take specific knowledge to punish.)
            </MudListItem>
            <MudListItem>
                - Do a non-invincible move (if you've performed your safejump correctly, your opponent will get hit
                by the <BaikenMove Move="Moves.AerialTatami" Naming="NamePreference.Friendly"/> mat here immediately since
                it's an active projectile that is already on top of them when they
                wake up. You can combo off of this hit, but it will take some practice.)
            </MudListItem>
            <MudListItem>
                - Block (This is by far their safest option because there isn't actually anything that can punish them for
                blocking the <BaikenMove Move="Moves.AerialTatami" Naming="NamePreference.Friendly"/>)
            </MudListItem>
        </MudList>
        It should be clear to see that if the opponent doesn't want to get blown up and die, that their only real option is
        to block. But your opponent might not know that, so you always have to be ready for them to do one of the other two
        options. You want to have the ability to convert either of those hits into a combo that ends in a safejump so that you
        can loop back around to the beginning of your pressure again. Combos for these starters can be found in the "Now
        That's What I Call Hit Confirms 56" section of the <MudLink Href="Combos">Combos</MudLink> page. Once your opponent
        actually learns to block, you can move on.
    </MudText>
    <br/>
    <MudText Typo="Typo.h5">
        <BaikenMove Typo="Typo.h5" Move="Moves.AerialTatami" Naming="NamePreference.Friendly"/> On Block
    </MudText>
    <br/>
    <MudText>
        Alright, your opponent has learned to respect your safejumps and has begun to block
        <BaikenMove Move="Moves.AerialTatami" Naming="NamePreference.Friendly"/>, on their wakeup. Assuming you are still
        reacting to their block to keep your <BaikenMove Move="Moves.AerialTatami" Naming="NamePreference.Friendly"/> safe,
        you have two good options which keep you safe on startup (frametrap) and are effective:
        <MudList T="string" ReadOnly>
            <MudListItem>
                - <BaikenMove Move="Moves.cS"/>
            </MudListItem>
            <MudListItem>
                - <BaikenMove Move="Moves._2K"/>
            </MudListItem>
            You also have a few options that are not safe on startup (can be interrupted by fast normals):
            <MudListItem>
                - <BaikenMove Move="Moves.Throw" Naming="NamePreference.English"/>
            </MudListItem>
            <MudListItem>
                - <BaikenMove Move="Moves._2D"/>
            </MudListItem>
            <MudListItem>
                - <BaikenMove Move="Moves.TkYouzansen" Naming="NamePreference.English"/>
                (<GlossaryLink Term="Tiger Knee">What does Tiger Knee mean?</GlossaryLink>)
            </MudListItem>
        </MudList>
        Alternatively, if you want to give up your safety to invincible reversals, you can choose not to react to them
        blocking <BaikenMove Move="Moves.AerialTatami" Naming="NamePreference.Friendly"/>. If you assume your opponent will
        be blocking the tatami you have a very large amount of time to set something up while your opponent is stuck waking
        up and then subsequently blocking
        <BaikenMove Move="Moves.AerialTatami" Naming="NamePreference.Friendly"/>. There are a couple reasons you would choose
        to do something unsafe to invincible moves. Either it's due to
        <GlossaryLink Term="Conditioning"/> your opponent not
        to by repeatedly punishing them for it or them not having access to an invincible reversal available at all. Over
        time you can learn which characters have invincible moves that don't require tension, which characters have
        invincible moves that do require tension, and which characters don't have any invincible moves so that you can
        choose your preferred option in the moment. Here are some of the options, all of which are usually safe on startup:
        <MudList T="string" ReadOnly>
            <MudListItem>
                - <BaikenMove Move="Moves.cS"/> (the benefit here is this gives you a massively increased window to react
                them getting hit by tatami for the price of no longer being safe to invincible moves)
            </MudListItem>
            <MudListItem>
                - <BaikenMove Move="Moves._2D"/>
            </MudListItem>
            <MudListItem>
                - <BaikenMove Move="Moves.SKab" Naming="NamePreference.Friendly"/>
            </MudListItem>
            These options are still safe on startup, but unsafe on block:
            <MudListItem>
                - <BaikenMove Move="Moves.Charged_5D"/>
            </MudListItem>
            <MudListItem>
                - <BaikenMove Move="Moves.TkYouzansen" Naming="NamePreference.English"/>
            </MudListItem>
        </MudList>
    </MudText>
    <br/>
    <MudText Typo="Typo.h5"><BaikenMove Typo="Typo.h5" Move="Moves.cS"/></MudText>
    <br/>
    <MudText>
        Your most common option in this situation will be
        <BaikenMove Move="Moves.cS"/> since it's your best pressure starter. What makes it so great is that it gives you the
        highest amount of effective options after your opponent blocks it. Note that it is very difficult for
        anyone to react to the tatami block quickly enough to make your <BaikenMove Move="Moves.cS"/> completely gapless,
        meaning your opponent could technically use an invincible move after blocking tatami to interrupt your attempt to
        <BaikenMove Move="Moves.cS"/>. However, in practice, this is quite a difficult input to attempt as your opponent has
        little time to do their directional inputs after blocking
        <BaikenMove Move="Moves.AerialTatami" Naming="NamePreference.Friendly"/>. Be aware of the possibility, but don't
        expect it. Luckily though, it's not terribly difficult to react in time to make the <BaikenMove Move="Moves.cS"/>
        <GlossaryLink Term="Frame Trap"/> your opponent. The simple
        explanation of a frametrap is very similar to the previous section where I explained what happens when your opponent
        tries using a non-invincible move when there's a tatami on top of them. Consider a frametrap to be the same concept
        except instead of your opponent using a move after waking up, it's after recovering from
        <GlossaryLink Term="Block Stun"/>. If you've timed your
        <BaikenMove Move="Moves.cS"/> well, your opponent will have such a small amount of time between the moment they're
        able to act and the time your <BaikenMove Move="Moves.cS"/> hits them that no move in their kit could possibly finish
        its <GlossaryLink Term="Startup"/> before they get hit.
        Note that jumping also has a startup time during which your opponent cannot block, so a frametrap will also land a
        hit on an opponent holding jump during your pressure.
    </MudText>
    <br/>
    <MudText Typo="Typo.h5"><BaikenMove Typo="Typo.h5" Move="Moves.cS"/> On Block</MudText>
    <br/>
    <MudText>
        If you've properly trained your opponent with good reactions and timing, your opponent will likely be blocking
        your <BaikenMove Move="Moves.cS"/> here. Let's talk about options after they do:
        <br/>
        <br/>
        <MudList T="string" ReadOnly>
            Gapless Cancels (no window for the opponent to input, which means no invincible reversals but also means no
            counterhits. Can be manually delayed for a frametrap):
            <MudListItem>
                - <BaikenMove Move="Moves.fS"/>/<BaikenMove Move="Moves._2S"/>: Safe options that push your opponent
                away, typically in anticipation of a <BaikenMove Move="Moves._2H"/>, which usually makes cancelling
                <BaikenMove Move="Moves._2H"/> into <BaikenMove Move="Moves.HKab"/> safe on block.
            </MudListItem>
            <MudListItem>
                - <BaikenMove Move="Moves._2D"/> forms a complement to
                <BaikenMove Move="Moves.TkYouzansen" Naming="NamePreference.Friendly"/> because of its double-hitting
                low. Will land a hit on anyone attempting to backdash or jump.
            </MudListItem>
            <MudListItem>
                - <BaikenMove Move="Moves.TkYouzansen" Naming="NamePreference.English"/> (must use Roman Cancel to
                both convert on hit and make it safe on block)
            </MudListItem>
            Frametrap Cancel (will give a counterhit if the opponent inputs any non-invincible move or a normal hit
            if they jump):
            <MudListItem>
                - <BaikenMove Move="Moves._2H"/>: Committal, but high reward natural frametrap that must be cancelled
                into a special move on block unless you like eating a massive punish. Note: doing
                <BaikenMove Move="Moves._2H"/> after <BaikenMove Move="Moves.cS"/> leaves you close enough that
                cancelling <BaikenMove Move="Moves._2H"/> into <BaikenMove Move="Moves.HKab"/> is throw punishable.
            </MudListItem>
            Frametrap Link (will give a counterhit if the opponent inputs any* non-invincible move or a normal hit
            if they jump):
            <MudListItem>
                - <BaikenMove Move="Moves._5P"/>: Has a 3 frame gap after <BaikenMove Move="Moves.cS"/>, meaning it
                trades with Sol 5K and Chipp 5P, but will beat out any other non-invincible move in the game. Leads to
                significantly less committal strings that are better for representing
                <GlossaryLink Term="Tick Throw" Text="Tick Throws"/>.
            </MudListItem>
            Resets (punishable during startup, but advantageous on block):
            <MudListItem>
                - Dash (no orange sparks) > <BaikenMove Move="Moves.Throw" Naming="NamePreference.Friendly"/> (see
                <MudLink Href="Throwkizeme">Throwkizeme</MudLink> page for followups)
            </MudListItem>
            <MudListItem>
                - Dash cancel (orange sparks) > <BaikenMove Move="Moves.Throw" Naming="NamePreference.Friendly"/>: This
                is more reactable than a normal dash, so it's less recommended but is still within reason.
            </MudListItem>
            <MudListItem>
                - <BaikenMove Move="Moves.SKab"/>: High reward reset option for passive opponents. (see
                <MudLink Href="SKabariRps">S Kabari RPS</MudLink> page for more details)
            </MudListItem>
            <MudListItem>
                - Dash up and <BaikenMove Move="Moves.cS"/>: Primarily for
                <MudLink Href="https://www.merriam-webster.com/dictionary/goad" Target="_blank">goading</MudLink> your opponent into a
                more proactive and therefore more risky defensive strategy.
            </MudListItem>
        </MudList>
    </MudText>
    <br/>
    <MudText Typo="Typo.h5"><BaikenMove Typo="Typo.h5" Move="Moves.fS"/> On Block</MudText>
    <br/>
    <MudText>
        You have a lot less options after <BaikenMove Move="Moves.fS"/> than <BaikenMove Move="Moves.cS"/>, but you do
        still have options:
        <br/>
        <br/>
        <MudList T="string" ReadOnly>
            Gapless Cancel:
            <MudListItem>
                - <BaikenMove Move="Moves._5H"/>: Your only option to stay gapless. However, this will eventually
                lead to a gap anyway since you'll be too far for
                <BaikenMove Move="Moves.Tatami" Naming="NamePreference.Friendly"/> to connect and
                <BaikenMove Move="Moves.HKab"/> would only gapless at close range.
            </MudListItem>
            Frametrap Cancel:
            <MudListItem>
                - <BaikenMove Move="Moves._2H"/>: Leaves a 4f gap, so around one-third of the cast can trade with this
                option, but the trade is in your favor as you get a knockdown and they don't.
            </MudListItem>
            Resets:
            <MudListItem>
                - Dash > <BaikenMove Move="Moves.Throw" Naming="NamePreference.Friendly"/>: Very dangerous and reactable
                option, but can still catch anyone sleeping at the wheel.
            </MudListItem>
            <MudListItem>
                - <BaikenMove Move="Moves.SKab"/>: Again, high reward reset option for passive opponents.
                (Reference: <MudLink Href="SKabariRps">S Kabari RPS</MudLink>)
            </MudListItem>
        </MudList>
    </MudText>
    <br/>
    <MudText Typo="Typo.h5"><BaikenMove Typo="Typo.h5" Move="Moves._2H"/> On Block</MudText>
    <br/>
    <MudText>
        You have even less options after <BaikenMove Move="Moves._2S"/> than <BaikenMove Move="Moves.fS"/>. By the time
        you're here, the spacing could vary a decent bit, so it's going to get more situational:
        <br/>
        <br/>
        <MudList T="string" ReadOnly>
            <MudListItem>
                - <BaikenMove Move="Moves.HKab"/>: Unsafe on block when really close (throw punish), gapless and safe
                on block when kinda close, frametraps at medium distances, jumpable gap at far distances. See the
                <MudLink Href="HKabariRps">H Kabari RPS</MudLink> page for more info.
            </MudListItem>
            <MudListItem>
                - <BaikenMove Move="Moves.Tatami"/>: Gapless up close, gets simultaneously less and more safe
                progressively at increasing distance. See the
                <MudLink Href="GroundedTatamiRps">Grounded Tatami RPS</MudLink> page for more info.
            </MudListItem>
            <MudListItem>
                - <BaikenMove Move="Moves.SKab"/>: Still a high reward reset option for passive opponents.
                (Reference: <MudLink Href="SKabariRps">S Kabari RPS</MudLink>)
            </MudListItem>
        </MudList>
    </MudText>
    @* <br/> *@
    @* <MudText Typo="Typo.h5"><BaikenMove Typo="Typo.h5" Move="Moves._2K"/></MudText> *@
    @* <br/> *@
    @* <MudText> *@
    @*     <BaikenMove Move="Moves._2K"/> is a safe and non-committal way to catch your opponent for blocking high after *@
    @*     <BaikenMove Move="Moves.AerialTatami" Naming="NamePreference.Friendly"/>. Everything in the *@
    @*     <BaikenMove Move="Moves.cS"/> section is also true of <BaikenMove Move="Moves._2K"/>, the main difference being that *@
    @*     you're trading your excellent reward on hit or block with <BaikenMove Move="Moves.cS"/> for the requirement that *@
    @*     your opponent must low block 2K. Though keep in mind that your opponent may not have any reason to block high in *@
    @*     this situation unless you make a habit of also representing an overhead in this situation. However, representing an *@
    @*     overhead here is unsafe on block, so without access to an RC, you get higher reward on average from following lines *@
    @*     beginning with <BaikenMove Move="Moves.cS"/>. *@
    @* </MudText> *@
    <MudGrid Justify="Justify.Center">
        <MudItem xs="4">
            <MudCard>
                <MudCardContent>
                    <MudText Typo="Typo.h4" Align="Align.Center">Under Construction</MudText>
                    <MudText Align="Align.Center">
                        <MudIcon Size="Size.Large" Icon="@Icons.Material.Filled.Construction"/>
                    </MudText>
                </MudCardContent>
            </MudCard>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {

}