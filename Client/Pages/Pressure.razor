@page "/Pressure"
@using Client.Shared

<PageTitle>@Constants.TitlePrefix Pressure</PageTitle>

<MudContainer>
    <MudText>
        Start <MudLink Href="https://glossary.infil.net/?t=Pressure" Target="_blank">here</MudLink> first.
    </MudText>
    <br/>
    <MudText>
        The first rule of offense is that you must first earn the privilege of getting in close to your opponent. You can't
        just run at them and expect to be able to land your best offensive starter: <BaikenMove Move="Moves.cS"/>. Most of
        the time your opponent isn't going to let you do that for free. If you want to get in close, you need to get a
        knockdown on your opponent. To learn to do this check out the <MudLink Href="Neutral">Neutral</MudLink> page.
    </MudText>
    <br/>
    <MudText>
        In a nutshell, pressure is the method by which you turn your opponent's disadvantage state (and by extension your
        advantage stage) into health loss and eventually round loss. Advantage and disadvantage will typically change
        between each player many times in one round, but what does it actually mean to be disadvantaged? The simplest way to
        define advantage is that the advantaged player gets to act before the disadvantaged player does. You will gain
        familiarity with this concept over the course of this section.
    </MudText>
    <br/>
    <MudText>
        Let's walk through an example of a typical
        <MudLink Href="https://glossary.infil.net/?t=Pressure" Target="_blank">blockstring</MudLink> step-by-step. Suppose
        you have just knocked your opponent down with
        <BaikenMove Move="Moves.HkabH" Naming="NamePreference.Friendly"/>. You're in advantage because you have the ability
        to act and make decisions while your opponent is stuck on the ground, unable to act. We typically use this time to
        set up a <BaikenMove Move="Moves.AerialTatami" Naming="NamePreference.Friendly"/> safejump. More information about
        that in the <MudLink Href="Safejumps">Safejumps</MudLink> section.
    </MudText>
    <br/>
    <MudText>
        Now that you've set up your knockdown and your safejump, your opponent has a choice as they're waking up:
        <MudList T="string" ReadOnly>
            <MudListItem>
                - Do an invincible reversal (if you've performed your safejump correctly, you would block it and they would
                eat a guaranteed punish since invincible reversals are always punishable on block, though there are some
                that will take specific knowledge to punish.)
            </MudListItem>
            <MudListItem>
                - Do a non-invincible move (if you've performed your safejump correctly, your opponent will get hit
                by the <BaikenMove Move="Moves.AerialTatami" Naming="NamePreference.Friendly"/> mat here immediately since
                it's an active projectile that is already on top of them when they
                wake up. You can combo off of this hit, but it will take some practice.)
            </MudListItem>
            <MudListItem>
                - Block (This is by far their safest option because there isn't actually anything that can punish them for
                blocking the <BaikenMove Move="Moves.AerialTatami" Naming="NamePreference.Friendly"/>)
            </MudListItem>
        </MudList>
        It should be clear to see that if the opponent doesn't want to get blown up and die, that their only real option is
        to block. But your opponent might not know that, so you always have to be ready for them to do one of the other two
        options. You want to have the ability to convert either of those hits into a combo that ends in a safejump so that you
        can loop back around to the beginning of your pressure again. Combos for these starters can be found in the "Now
        That's What I Call Hit Confirms 56" section of the <MudLink Href="Combos">Combos</MudLink> page. Once your opponent
        actually learns to block, you can move on.
    </MudText>
    <br/>
    <MudText Typo="Typo.h5">
        <BaikenMove Typo="Typo.h5" Move="Moves.AerialTatami" Naming="NamePreference.Friendly"/> On Block
    </MudText>
    <br/>
    <MudText>
        Alright, your opponent has learned to respect your safejumps and has begun to block
        <BaikenMove Move="Moves.AerialTatami" Naming="NamePreference.Friendly"/>, on their wakeup. Assuming you are still
        reacting to their block to keep your <BaikenMove Move="Moves.AerialTatami" Naming="NamePreference.Friendly"/> safe,
        you have two good options which keep you safe on startup (frametrap) and are effective:
        <MudList T="string" ReadOnly>
            <MudListItem>
                - <BaikenMove Move="Moves.cS"/>
            </MudListItem>
            <MudListItem>
                - <BaikenMove Move="Moves._2K"/>
            </MudListItem>
            You also have a few options that are not safe on startup (can be interrupted by fast normals):
            <MudListItem>
                - <BaikenMove Move="Moves.Throw" Naming="NamePreference.English"/>
            </MudListItem>
            <MudListItem>
                - <BaikenMove Move="Moves._2D"/>
            </MudListItem>
            <MudListItem>
                - <BaikenMove Move="Moves.Youzansen.AddPrefix(YouzansenPrefix)" Naming="NamePreference.English"/>
                (<MudLink Href="https://glossary.infil.net/?t=Tiger%20Knee" Target="_blank">What does Tiger Knee mean?</MudLink>)
            </MudListItem>
        </MudList>
        Alternatively, if you want to give up your safety to invincible reversals, you can choose not to react to them
        blocking <BaikenMove Move="Moves.AerialTatami" Naming="NamePreference.Friendly"/>. If you assume your opponent will
        be blocking the tatami you have a very large amount of time to set something up while your opponent is stuck waking
        up and then subsequently blocking
        <BaikenMove Move="Moves.AerialTatami" Naming="NamePreference.Friendly"/>. There are a couple reasons you would choose
        to do something unsafe to invincible moves. Either it's due to
        <MudLink Href="https://glossary.infil.net/?t=Conditioning" Target="_blank">conditioning</MudLink> your opponent not
        to by repeatedly punishing them for it or them not having access to an invincible reversal available at all. Over
        time you can learn which characters have invincible moves that don't require tension, which characters have
        invincible moves that do require tension, and which characters don't have any invincible moves so that you can
        choose your preferred option in the moment. Here are some of the options, all of which are usually safe on startup:
        <MudList T="string" ReadOnly>
            <MudListItem>
                - <BaikenMove Move="Moves.cS"/> (the benefit here is this gives you a massively increased window to react
                them getting hit by tatami for the price of no longer being safe to invincible moves)
            </MudListItem>
            <MudListItem>
                - <BaikenMove Move="Moves._2D"/>
            </MudListItem>
            <MudListItem>
                - <BaikenMove Move="Moves.SKab" Naming="NamePreference.Friendly"/>
            </MudListItem>
            These options are still safe on startup, but unsafe on block:
            <MudListItem>
                - <BaikenMove Move="Moves.Charged_5D"/>
            </MudListItem>
            <MudListItem>
                - <BaikenMove Move="Moves.Youzansen.AddPrefix(YouzansenPrefix)" Naming="NamePreference.English"/>
            </MudListItem>
        </MudList>
    </MudText>
    <br/>
    <MudText Typo="Typo.h5"><BaikenMove Typo="Typo.h5" Move="Moves.cS"/></MudText>
    <br/>
    <MudText>
        Your most common option in this situation will be
        <BaikenMove Move="Moves.cS"/> since it's your best pressure starter. What makes it so great is that it gives you the
        highest amount of effective options after your opponent blocks it. Note that it is very difficult for
        anyone to react to the tatami block quickly enough to make your <BaikenMove Move="Moves.cS"/> completely gapless,
        meaning your opponent could technically use an invincible move after blocking tatami to interrupt your attempt to
        <BaikenMove Move="Moves.cS"/>. However, in practice, this is quite a difficult input to attempt as your opponent has
        little time to do their directional inputs after blocking
        <BaikenMove Move="Moves.AerialTatami" Naming="NamePreference.Friendly"/>. Be aware of the possibility, but don't
        expect it. Luckily though, it's not terribly difficult to react in time to make the <BaikenMove Move="Moves.cS"/>
        <MudLink Href="https://glossary.infil.net/?t=Frame%20Trap" Target="_blank">frametrap</MudLink> your opponent. The simple
        explanation of a frametrap is very similar to the previous section where I explained what happens when your opponent
        tries using a non-invincible move when there's a tatami on top of them. Consider a frametrap to be the same concept
        except instead of your opponent using a move after waking up, it's after recovering from
        <MudLink Href="https://glossary.infil.net/?t=Frame%20Trap" Target="_blank">blockstun</MudLink>. If you've timed your
        <BaikenMove Move="Moves.cS"/> well, your opponent will have such a small amount of time between the moment they're
        able to act and the time your <BaikenMove Move="Moves.cS"/> hits them that no move in their kit could possibly finish
        its <MudLink Href="https://glossary.infil.net/?t=Startup" Target="_blank">startup</MudLink> before they get hit.
        Note that jumping also has a startup time during which your opponent cannot block, so a frametrap will also land a
        hit on an opponent holding jump during your pressure.
    </MudText>
    <br/>
    <MudText Typo="Typo.h5"><BaikenMove Typo="Typo.h5" Move="Moves._2K"/></MudText>
    <br/>
    <MudText>
        <BaikenMove Move="Moves._2K"/> is a safe and non-committal way to catch your opponent for blocking high after
        <BaikenMove Move="Moves.AerialTatami" Naming="NamePreference.Friendly"/>. Everything in the
        <BaikenMove Move="Moves.cS"/> section is also true of <BaikenMove Move="Moves._2K"/>, the main difference being that
        you're trading your excellent reward on hit or block with <BaikenMove Move="Moves.cS"/> for the requirement that
        your opponent must low block 2K. Though keep in mind that your opponent may not have any reason to block high in
        this situation unless you make a habit of also representing an overhead in this situation. However, representing an
        overhead here is unsafe on block, so without access to an RC, you get higher reward on average from following lines
        beginning with <BaikenMove Move="Moves.cS"/>.
    </MudText>
    <MudGrid Justify="Justify.Center">
        <MudItem xs="4">
            <MudCard>
                <MudCardContent>
                    <MudText Typo="Typo.h4" Align="Align.Center">Under Construction</MudText>
                    <MudText Align="Align.Center">
                        <MudIcon Size="Size.Large" Icon="@Icons.Material.Filled.Construction"/>
                    </MudText>
                </MudCardContent>
            </MudCard>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    private const string YouzansenPrefix = "Tiger Knee";

}