<MudTooltip>
    <ChildContent>
        @if (!string.IsNullOrWhiteSpace(Move.DustloopTag))
        {
            <MudLink Typo="Typo" Color="@TextColor" Href="@DustloopUrl" Target="_blank">@DisplayText</MudLink>
        }
        else
        {
            <MudText Typo="Typo" Color="@TextColor">@DisplayText</MudText>
        }
    </ChildContent>
    <TooltipContent>
        <MudStack>
            <MudImage Src="@ImageUri" Height="200"></MudImage>
            <MudText>@Move.EnglishName</MudText>
            @if (!string.IsNullOrWhiteSpace(Move.FriendlyName))
            {
                <MudText>"@Move.FriendlyName"</MudText>
            }
        </MudStack>
    </TooltipContent>
</MudTooltip>

@code {
    [Parameter]
    public Move Move { get; set; }

    [Parameter] public NamePreference Naming { get; set; } = NamePreference.Notation;

    [Parameter] public Typo Typo { get; set; } = Typo.body1;

    private string ImageUri => $"Moves/{Move.ImageName}.png";

    private Color TextColor => Move.AttackButton switch
    {
        AttackButton.P => Color.Primary,
        AttackButton.K => Color.Info,
        AttackButton.S => Color.Success,
        AttackButton.H => Color.Error,
        AttackButton.D => Color.Warning,
        _              => Color.Default,
    };

    private string DisplayText => Naming switch
    {
        NamePreference.English  => Move.DisplayEnglishText,
        NamePreference.Friendly => Move.DisplayFriendlyText,
        NamePreference.Notation => Move.DisplayNotationText,
        _                       => "",
    };
    
    private string DustloopUrl => $"https://www.dustloop.com/w/GGST/Baiken#{Move.DustloopTag}";
}